"""feat: init migrations

Revision ID: f9d597d8951b
Revises: 
Create Date: 2023-04-15 15:33:50.170554

"""
from alembic import op
import sqlalchemy as sa

# revision identifiers, used by Alembic.
revision = 'f9d597d8951b'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('applicants',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('name', sa.String(), nullable=False),
                    sa.Column('description', sa.String(), nullable=False),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_table('cities',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('name', sa.String(), nullable=False),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_table('recruiters',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('company_name', sa.String(), nullable=False),
                    sa.Column('description', sa.String(), nullable=False),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_table('skills',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('name', sa.String(), nullable=False),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_table('applicant_skill',
                    sa.Column('skill_id', sa.Integer(), nullable=False),
                    sa.Column('applicant_id', sa.Integer(), nullable=False),
                    sa.ForeignKeyConstraint(['applicant_id'], ['applicants.id'], ),
                    sa.ForeignKeyConstraint(['skill_id'], ['skills.id'], ),
                    sa.PrimaryKeyConstraint('skill_id', 'applicant_id')
                    )
    op.create_table('vacancies',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('title', sa.String(), nullable=False),
                    sa.Column('description', sa.String(), nullable=False),
                    sa.Column('recruiter_id', sa.Integer(), nullable=True),
                    sa.Column('city_id', sa.Integer(), nullable=True),
                    sa.ForeignKeyConstraint(['city_id'], ['cities.id'], ),
                    sa.ForeignKeyConstraint(['recruiter_id'], ['recruiters.id'], ),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_table('questions',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('vacancy_id', sa.Integer(), nullable=True),
                    sa.Column('question', sa.String(), nullable=False),
                    sa.Column('answer', sa.String(), nullable=False),
                    sa.Column('archived', sa.Boolean(), nullable=False),
                    sa.ForeignKeyConstraint(['vacancy_id'], ['vacancies.id'], ),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_table('responses',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('applicant_id', sa.Integer(), nullable=True),
                    sa.Column('vacancy_id', sa.Integer(), nullable=True),
                    sa.Column('result', sa.String(), nullable=False),
                    sa.ForeignKeyConstraint(['applicant_id'], ['applicants.id'], ),
                    sa.ForeignKeyConstraint(['vacancy_id'], ['vacancies.id'], ),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_table('vacancy_skill',
                    sa.Column('vacancy_id', sa.Integer(), nullable=False),
                    sa.Column('skill_id', sa.Integer(), nullable=False),
                    sa.ForeignKeyConstraint(['skill_id'], ['skills.id'], ),
                    sa.ForeignKeyConstraint(['vacancy_id'], ['vacancies.id'], ),
                    sa.PrimaryKeyConstraint('vacancy_id', 'skill_id')
                    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('vacancy_skill')
    op.drop_table('responses')
    op.drop_table('questions')
    op.drop_table('vacancies')
    op.drop_table('applicant_skill')
    op.drop_table('skills')
    op.drop_table('recruiters')
    op.drop_table('cities')
    op.drop_table('applicants')
    # ### end Alembic commands ###
