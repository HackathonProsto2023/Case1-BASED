"""add users and profiles

Revision ID: a2072387c37a
Revises: 
Create Date: 2023-04-15 22:31:52.546600

"""
from alembic import op
import sqlalchemy as sa

# revision identifiers, used by Alembic.
revision = 'a2072387c37a'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('profiles',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('name', sa.String(), nullable=False),
                    sa.Column('city_id', sa.Integer(), nullable=True),
                    sa.Column('description', sa.String(), nullable=False),
                    sa.ForeignKeyConstraint(['city_id'], ['cities.id'], ),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_table('users',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('login', sa.String(), nullable=False),
                    sa.Column('role', sa.String(), nullable=False),
                    sa.Column('profile_id', sa.Integer(), nullable=True),
                    sa.ForeignKeyConstraint(['profile_id'], ['profiles.id'], ),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_table('vacancies',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('title', sa.String(), nullable=False),
                    sa.Column('description', sa.String(), nullable=False),
                    sa.Column('company_id', sa.Integer(), nullable=True),
                    sa.Column('publish_date', sa.Date(), nullable=False),
                    sa.ForeignKeyConstraint(['company_id'], ['profiles.id'], ),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_table('applicant_skill',
                    sa.Column('skill_id', sa.Integer(), nullable=False),
                    sa.Column('applicant_id', sa.Integer(), nullable=False),
                    sa.ForeignKeyConstraint(['applicant_id'], ['users.id'], ),
                    sa.ForeignKeyConstraint(['skill_id'], ['skills.id'], ),
                    sa.PrimaryKeyConstraint('skill_id', 'applicant_id')
                    )
    op.create_table('questions',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('vacancy_id', sa.Integer(), nullable=True),
                    sa.Column('question', sa.String(), nullable=False),
                    sa.Column('answer', sa.String(), nullable=False),
                    sa.Column('archived', sa.Boolean(), nullable=False),
                    sa.ForeignKeyConstraint(['vacancy_id'], ['vacancies.id'], ),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_table('responses',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('applicant_id', sa.Integer(), nullable=True),
                    sa.Column('vacancy_id', sa.Integer(), nullable=True),
                    sa.Column('response_date', sa.Date(), nullable=False),
                    sa.Column('task_result', sa.String(), nullable=False),
                    sa.Column('answer', sa.String(), nullable=False),
                    sa.ForeignKeyConstraint(['applicant_id'], ['profiles.id'], ),
                    sa.ForeignKeyConstraint(['vacancy_id'], ['vacancies.id'], ),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_table('vacancy_skill',
                    sa.Column('vacancy_id', sa.Integer(), nullable=False),
                    sa.Column('skill_id', sa.Integer(), nullable=False),
                    sa.ForeignKeyConstraint(['skill_id'], ['skills.id'], ),
                    sa.ForeignKeyConstraint(['vacancy_id'], ['vacancies.id'], ),
                    sa.PrimaryKeyConstraint('vacancy_id', 'skill_id')
                    )
    op.drop_table('applicants')
    op.drop_table('recruiters')
    op.drop_table('company')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('company',
                    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
                    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
                    sa.Column('description', sa.VARCHAR(), autoincrement=False, nullable=False),
                    sa.PrimaryKeyConstraint('id', name='company_pkey')
                    )
    op.create_table('recruiters',
                    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
                    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
                    sa.Column('company_id', sa.VARCHAR(), autoincrement=False, nullable=False),
                    sa.PrimaryKeyConstraint('id', name='recruiters_pkey')
                    )
    op.create_table('applicants',
                    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
                    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
                    sa.Column('description', sa.VARCHAR(), autoincrement=False, nullable=False),
                    sa.PrimaryKeyConstraint('id', name='applicants_pkey')
                    )
    op.drop_table('vacancy_skill')
    op.drop_table('responses')
    op.drop_table('questions')
    op.drop_table('applicant_skill')
    op.drop_table('vacancies')
    op.drop_table('users')
    op.drop_table('profiles')
    # ### end Alembic commands ###
